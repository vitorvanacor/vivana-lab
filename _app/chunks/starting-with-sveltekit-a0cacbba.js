import{S as ba,i as ja,s as Ta,e as p,t as c,k as i,c as o,a as l,g as r,d as n,n as u,b as v,f as e,F as a,J as In}from"./vendor-06ae0894.js";function Sa(oa){let d,Ys,cs,m,Ks,G,Fs,Js,rs,h,Us,N,Gs,Ns,is,y,Bs,B,Vs,$s,us,L,zs,ks,C,Ws,fs,f,Qs,_,Xs,Zs,V,sn,nn,vs,g,an,$,tn,en,ds,k,M,pn,z,W,on,ln,Q,cn,rn,X,un,kn,Z,fn,ms,H,vn,hs,b,la=`<code class="language-undefined">.
\u251C\u2500\u2500 README.md
\u251C\u2500\u2500 package.json
\u251C\u2500\u2500 src
\u2502   \u251C\u2500\u2500 app.html
\u2502   \u251C\u2500\u2500 global.d.ts
\u2502   \u2514\u2500\u2500 routes
\u2502       \u2514\u2500\u2500 index.svelte
\u251C\u2500\u2500 static
\u2502   \u2514\u2500\u2500 favicon.ico
\u251C\u2500\u2500 svelte.config.js
\u251C\u2500\u2500 tsconfig.json
\u251C\u2500\u2500 .eslintrc.cjs
\u251C\u2500\u2500 .prettierrc</code>`,ys,O,dn,gs,w,mn,ss,hn,yn,ws,R,ns,gn,Es,j,ca=`<code class="language-undefined">## Developing

This project uses SvelteKit.
Install dependencies with &#96;npm install&#96; (or &#96;pnpm install&#96; or &#96;yarn&#96;) and start a development server:

&#96;&#96;&#96;bash
npm run dev

# or start the server and open the app in a new browser tab
npm run dev -- --open
&#96;&#96;&#96;

## Building

Before creating a production version of your app, install an [adapter](https://kit.svelte.dev/docs#adapters) for your target environment. Then:

&#96;&#96;&#96;bash
npm run build
&#96;&#96;&#96;

&gt; You can preview the built app with &#96;npm run preview&#96;, regardless of whether you installed an adapter. This should _not_ be used to serve your app in production.</code>`,_s,A,as,wn,bs,T,ra=`<code class="language-json"><span class="token punctuation">&#123;</span>
  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"vivana-lab"</span><span class="token punctuation">,</span>
  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.0.1"</span><span class="token punctuation">,</span>
  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"svelte-kit dev"</span><span class="token punctuation">,</span>
    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"svelte-kit build"</span><span class="token punctuation">,</span>
    <span class="token property">"preview"</span><span class="token operator">:</span> <span class="token string">"svelte-kit preview"</span><span class="token punctuation">,</span>
    <span class="token property">"check"</span><span class="token operator">:</span> <span class="token string">"svelte-check --tsconfig ./tsconfig.json"</span><span class="token punctuation">,</span>
    <span class="token property">"check:watch"</span><span class="token operator">:</span> <span class="token string">"svelte-check --tsconfig ./tsconfig.json --watch"</span><span class="token punctuation">,</span>
    <span class="token property">"lint"</span><span class="token operator">:</span> <span class="token string">"prettier --ignore-path .gitignore --check --plugin-search-dir=. . &amp;&amp; eslint --ignore-path .gitignore ."</span><span class="token punctuation">,</span>
    <span class="token property">"format"</span><span class="token operator">:</span> <span class="token string">"prettier --ignore-path .gitignore --write --plugin-search-dir=. ."</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token property">"@sveltejs/kit"</span><span class="token operator">:</span> <span class="token string">"next"</span><span class="token punctuation">,</span>
    <span class="token property">"@typescript-eslint/eslint-plugin"</span><span class="token operator">:</span> <span class="token string">"^4.31.1"</span><span class="token punctuation">,</span>
    <span class="token property">"@typescript-eslint/parser"</span><span class="token operator">:</span> <span class="token string">"^4.31.1"</span><span class="token punctuation">,</span>
    <span class="token property">"eslint"</span><span class="token operator">:</span> <span class="token string">"^7.32.0"</span><span class="token punctuation">,</span>
    <span class="token property">"eslint-config-prettier"</span><span class="token operator">:</span> <span class="token string">"^8.3.0"</span><span class="token punctuation">,</span>
    <span class="token property">"eslint-plugin-svelte3"</span><span class="token operator">:</span> <span class="token string">"^3.2.1"</span><span class="token punctuation">,</span>
    <span class="token property">"prettier"</span><span class="token operator">:</span> <span class="token string">"^2.4.1"</span><span class="token punctuation">,</span>
    <span class="token property">"prettier-plugin-svelte"</span><span class="token operator">:</span> <span class="token string">"^2.4.0"</span><span class="token punctuation">,</span>
    <span class="token property">"svelte"</span><span class="token operator">:</span> <span class="token string">"^3.42.6"</span><span class="token punctuation">,</span>
    <span class="token property">"svelte-check"</span><span class="token operator">:</span> <span class="token string">"^2.2.6"</span><span class="token punctuation">,</span>
    <span class="token property">"svelte-preprocess"</span><span class="token operator">:</span> <span class="token string">"^4.9.4"</span><span class="token punctuation">,</span>
    <span class="token property">"tslib"</span><span class="token operator">:</span> <span class="token string">"^2.3.1"</span><span class="token punctuation">,</span>
    <span class="token property">"typescript"</span><span class="token operator">:</span> <span class="token string">"^4.4.3"</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"module"</span>
<span class="token punctuation">&#125;</span></code>`,js,q,ts,En,Ts,S,ia=`<code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/favicon.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    %svelte.head%
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>svelte<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>%svelte.body%<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code>`,Ss,Y,es,_n,Is,I,ua='<code class="language-ts"><span class="token comment">/// &lt;reference types="@sveltejs/kit" /></span></code>',Ps,K,ps,bn,Ds,P,ka=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Welcome to SvelteKit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
  Visit <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://kit.svelte.dev<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>kit.svelte.dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> to read the
  documentation
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code>`,xs,F,os,jn,Ls,D,fa=`<code class="language-js"><span class="token keyword">import</span> preprocess <span class="token keyword">from</span> <span class="token string">'svelte-preprocess'</span><span class="token punctuation">;</span>

<span class="token comment">/** @type &#123;import('@sveltejs/kit').Config&#125; */</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// Consult https://github.com/sveltejs/svelte-preprocess</span>
  <span class="token comment">// for more information about preprocessors</span>
  preprocess<span class="token operator">:</span> <span class="token function">preprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  kit<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// hydrate the &lt;div id="svelte"> element in src/app.html</span>
    target<span class="token operator">:</span> <span class="token string">'#svelte'</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code>`,Cs,J,ls,Tn,Ms,x,va=`<code class="language-json"><span class="token punctuation">&#123;</span>
  <span class="token property">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token property">"moduleResolution"</span><span class="token operator">:</span> <span class="token string">"node"</span><span class="token punctuation">,</span>
    <span class="token property">"module"</span><span class="token operator">:</span> <span class="token string">"es2020"</span><span class="token punctuation">,</span>
    <span class="token property">"lib"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"es2020"</span><span class="token punctuation">,</span> <span class="token string">"DOM"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"target"</span><span class="token operator">:</span> <span class="token string">"es2019"</span><span class="token punctuation">,</span>
    <span class="token comment">/**
			svelte-preprocess cannot figure out whether you have a value or a type, so tell TypeScript
			to enforce using &#96;import type&#96; instead of &#96;import&#96; for Types.
			*/</span>
    <span class="token property">"importsNotUsedAsValues"</span><span class="token operator">:</span> <span class="token string">"error"</span><span class="token punctuation">,</span>
    <span class="token property">"isolatedModules"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"resolveJsonModule"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">/**
			To have warnings/errors of the Svelte compiler at the correct position,
			enable source maps by default.
			*/</span>
    <span class="token property">"sourceMap"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"esModuleInterop"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"skipLibCheck"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"forceConsistentCasingInFileNames"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"baseUrl"</span><span class="token operator">:</span> <span class="token string">"."</span><span class="token punctuation">,</span>
    <span class="token property">"allowJs"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"checkJs"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"paths"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token property">"$lib"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/lib"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">"$lib/*"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/lib/*"</span><span class="token punctuation">]</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token property">"include"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/**/*.d.ts"</span><span class="token punctuation">,</span> <span class="token string">"src/**/*.js"</span><span class="token punctuation">,</span> <span class="token string">"src/**/*.ts"</span><span class="token punctuation">,</span> <span class="token string">"src/**/*.svelte"</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span></code>`;return{c(){d=p("h1"),Ys=c(pa),cs=i(),m=p("p"),Ks=c("I\u2019ve created this repo to make experiments - that\u2019s why it\u2019s called \u201Clab\u201D ("),G=p("strong"),Fs=c("vivana"),Js=c(" is just a wordplay with my name)."),rs=i(),h=p("p"),Us=c("The idea is to simulate the development of a product starting from nothing and making very small increments on each iteration. The development process will be documented on posts in the "),N=p("code"),Gs=c("blog/"),Ns=c(" folder."),is=i(),y=p("p"),Bs=c("The \u201Cproduct\u201D being developed will start as a simple website to display these posts describing the development process - "),B=p("em"),Vs=c("very meta"),$s=c(". The end-product remains uncertain."),us=i(),L=p("p"),zs=c("Let\u2019s begin!"),ks=i(),C=p("h2"),Ws=c("SvelteKit"),fs=i(),f=p("p"),Qs=c("I wanna learn Svelte so I\u2019m gonna use "),_=p("a"),Xs=c("SvelteKit"),Zs=c(". I went with the latest version of the time, which was "),V=p("code"),sn=c("1.0.0-next.179"),nn=c("."),vs=i(),g=p("p"),an=c("Following the Getting Started guide, I ran the "),$=p("code"),tn=c("npm init svelte@next"),en=c(" command and I was given some options:"),ds=i(),k=p("ul"),M=p("li"),pn=c("Skeleton Project or Demo Project?"),z=p("ul"),W=p("li"),on=c("Demo Project starts with some features, so it will be useful for reference; but I went with Skeleton Project to start from scratch."),ln=i(),Q=p("li"),cn=c("Add TypeScript? Yes."),rn=i(),X=p("li"),un=c("Add Prettier? Yes."),kn=i(),Z=p("li"),fn=c("Add ESLint? Yes."),ms=i(),H=p("p"),vn=c("The following file structure was created:"),hs=i(),b=p("pre"),ys=i(),O=p("p"),dn=c("That\u2019s the end of this post. In the next one, I will deploy it as a static website."),gs=i(),w=p("p"),mn=c("I\u2019ll leave here the contents of the files created by "),ss=p("code"),hn=c("npm init svelte@next"),yn=c(":"),ws=i(),R=p("h3"),ns=p("code"),gn=c("README.md"),Es=i(),j=p("pre"),_s=i(),A=p("h3"),as=p("code"),wn=c("package.json"),bs=i(),T=p("pre"),js=i(),q=p("h3"),ts=p("code"),En=c("app.html"),Ts=i(),S=p("pre"),Ss=i(),Y=p("h3"),es=p("code"),_n=c("global.d.ts"),Is=i(),I=p("pre"),Ps=i(),K=p("h3"),ps=p("code"),bn=c("index.svelte"),Ds=i(),P=p("pre"),xs=i(),F=p("h3"),os=p("code"),jn=c("svelte.config.js"),Ls=i(),D=p("pre"),Cs=i(),J=p("h3"),ls=p("code"),Tn=c("tsconfig.json"),Ms=i(),x=p("pre"),this.h()},l(s){d=o(s,"H1",{});var t=l(d);Ys=r(t,pa),t.forEach(n),cs=u(s),m=o(s,"P",{});var Hs=l(m);Ks=r(Hs,"I\u2019ve created this repo to make experiments - that\u2019s why it\u2019s called \u201Clab\u201D ("),G=o(Hs,"STRONG",{});var Pn=l(G);Fs=r(Pn,"vivana"),Pn.forEach(n),Js=r(Hs," is just a wordplay with my name)."),Hs.forEach(n),rs=u(s),h=o(s,"P",{});var Os=l(h);Us=r(Os,"The idea is to simulate the development of a product starting from nothing and making very small increments on each iteration. The development process will be documented on posts in the "),N=o(Os,"CODE",{});var Dn=l(N);Gs=r(Dn,"blog/"),Dn.forEach(n),Ns=r(Os," folder."),Os.forEach(n),is=u(s),y=o(s,"P",{});var Rs=l(y);Bs=r(Rs,"The \u201Cproduct\u201D being developed will start as a simple website to display these posts describing the development process - "),B=o(Rs,"EM",{});var xn=l(B);Vs=r(xn,"very meta"),xn.forEach(n),$s=r(Rs,". The end-product remains uncertain."),Rs.forEach(n),us=u(s),L=o(s,"P",{});var Ln=l(L);zs=r(Ln,"Let\u2019s begin!"),Ln.forEach(n),ks=u(s),C=o(s,"H2",{});var Cn=l(C);Ws=r(Cn,"SvelteKit"),Cn.forEach(n),fs=u(s),f=o(s,"P",{});var U=l(f);Qs=r(U,"I wanna learn Svelte so I\u2019m gonna use "),_=o(U,"A",{href:!0,rel:!0});var Mn=l(_);Xs=r(Mn,"SvelteKit"),Mn.forEach(n),Zs=r(U,". I went with the latest version of the time, which was "),V=o(U,"CODE",{});var Hn=l(V);sn=r(Hn,"1.0.0-next.179"),Hn.forEach(n),nn=r(U,"."),U.forEach(n),vs=u(s),g=o(s,"P",{});var As=l(g);an=r(As,"Following the Getting Started guide, I ran the "),$=o(As,"CODE",{});var On=l($);tn=r(On,"npm init svelte@next"),On.forEach(n),en=r(As," command and I was given some options:"),As.forEach(n),ds=u(s),k=o(s,"UL",{});var E=l(k);M=o(E,"LI",{});var Sn=l(M);pn=r(Sn,"Skeleton Project or Demo Project?"),z=o(Sn,"UL",{});var Rn=l(z);W=o(Rn,"LI",{});var An=l(W);on=r(An,"Demo Project starts with some features, so it will be useful for reference; but I went with Skeleton Project to start from scratch."),An.forEach(n),Rn.forEach(n),Sn.forEach(n),ln=u(E),Q=o(E,"LI",{});var qn=l(Q);cn=r(qn,"Add TypeScript? Yes."),qn.forEach(n),rn=u(E),X=o(E,"LI",{});var Yn=l(X);un=r(Yn,"Add Prettier? Yes."),Yn.forEach(n),kn=u(E),Z=o(E,"LI",{});var Kn=l(Z);fn=r(Kn,"Add ESLint? Yes."),Kn.forEach(n),E.forEach(n),ms=u(s),H=o(s,"P",{});var Fn=l(H);vn=r(Fn,"The following file structure was created:"),Fn.forEach(n),hs=u(s),b=o(s,"PRE",{class:!0});var da=l(b);da.forEach(n),ys=u(s),O=o(s,"P",{});var Jn=l(O);dn=r(Jn,"That\u2019s the end of this post. In the next one, I will deploy it as a static website."),Jn.forEach(n),gs=u(s),w=o(s,"P",{});var qs=l(w);mn=r(qs,"I\u2019ll leave here the contents of the files created by "),ss=o(qs,"CODE",{});var Un=l(ss);hn=r(Un,"npm init svelte@next"),Un.forEach(n),yn=r(qs,":"),qs.forEach(n),ws=u(s),R=o(s,"H3",{});var Gn=l(R);ns=o(Gn,"CODE",{});var Nn=l(ns);gn=r(Nn,"README.md"),Nn.forEach(n),Gn.forEach(n),Es=u(s),j=o(s,"PRE",{class:!0});var ma=l(j);ma.forEach(n),_s=u(s),A=o(s,"H3",{});var Bn=l(A);as=o(Bn,"CODE",{});var Vn=l(as);wn=r(Vn,"package.json"),Vn.forEach(n),Bn.forEach(n),bs=u(s),T=o(s,"PRE",{class:!0});var ha=l(T);ha.forEach(n),js=u(s),q=o(s,"H3",{});var $n=l(q);ts=o($n,"CODE",{});var zn=l(ts);En=r(zn,"app.html"),zn.forEach(n),$n.forEach(n),Ts=u(s),S=o(s,"PRE",{class:!0});var ya=l(S);ya.forEach(n),Ss=u(s),Y=o(s,"H3",{});var Wn=l(Y);es=o(Wn,"CODE",{});var Qn=l(es);_n=r(Qn,"global.d.ts"),Qn.forEach(n),Wn.forEach(n),Is=u(s),I=o(s,"PRE",{class:!0});var ga=l(I);ga.forEach(n),Ps=u(s),K=o(s,"H3",{});var Xn=l(K);ps=o(Xn,"CODE",{});var Zn=l(ps);bn=r(Zn,"index.svelte"),Zn.forEach(n),Xn.forEach(n),Ds=u(s),P=o(s,"PRE",{class:!0});var wa=l(P);wa.forEach(n),xs=u(s),F=o(s,"H3",{});var sa=l(F);os=o(sa,"CODE",{});var na=l(os);jn=r(na,"svelte.config.js"),na.forEach(n),sa.forEach(n),Ls=u(s),D=o(s,"PRE",{class:!0});var Ea=l(D);Ea.forEach(n),Cs=u(s),J=o(s,"H3",{});var aa=l(J);ls=o(aa,"CODE",{});var ta=l(ls);Tn=r(ta,"tsconfig.json"),ta.forEach(n),aa.forEach(n),Ms=u(s),x=o(s,"PRE",{class:!0});var _a=l(x);_a.forEach(n),this.h()},h(){v(_,"href","https://kit.svelte.dev/docs"),v(_,"rel","nofollow"),v(b,"class","language-undefined"),v(j,"class","language-undefined"),v(T,"class","language-json"),v(S,"class","language-html"),v(I,"class","language-ts"),v(P,"class","language-html"),v(D,"class","language-js"),v(x,"class","language-json")},m(s,t){e(s,d,t),a(d,Ys),e(s,cs,t),e(s,m,t),a(m,Ks),a(m,G),a(G,Fs),a(m,Js),e(s,rs,t),e(s,h,t),a(h,Us),a(h,N),a(N,Gs),a(h,Ns),e(s,is,t),e(s,y,t),a(y,Bs),a(y,B),a(B,Vs),a(y,$s),e(s,us,t),e(s,L,t),a(L,zs),e(s,ks,t),e(s,C,t),a(C,Ws),e(s,fs,t),e(s,f,t),a(f,Qs),a(f,_),a(_,Xs),a(f,Zs),a(f,V),a(V,sn),a(f,nn),e(s,vs,t),e(s,g,t),a(g,an),a(g,$),a($,tn),a(g,en),e(s,ds,t),e(s,k,t),a(k,M),a(M,pn),a(M,z),a(z,W),a(W,on),a(k,ln),a(k,Q),a(Q,cn),a(k,rn),a(k,X),a(X,un),a(k,kn),a(k,Z),a(Z,fn),e(s,ms,t),e(s,H,t),a(H,vn),e(s,hs,t),e(s,b,t),b.innerHTML=la,e(s,ys,t),e(s,O,t),a(O,dn),e(s,gs,t),e(s,w,t),a(w,mn),a(w,ss),a(ss,hn),a(w,yn),e(s,ws,t),e(s,R,t),a(R,ns),a(ns,gn),e(s,Es,t),e(s,j,t),j.innerHTML=ca,e(s,_s,t),e(s,A,t),a(A,as),a(as,wn),e(s,bs,t),e(s,T,t),T.innerHTML=ra,e(s,js,t),e(s,q,t),a(q,ts),a(ts,En),e(s,Ts,t),e(s,S,t),S.innerHTML=ia,e(s,Ss,t),e(s,Y,t),a(Y,es),a(es,_n),e(s,Is,t),e(s,I,t),I.innerHTML=ua,e(s,Ps,t),e(s,K,t),a(K,ps),a(ps,bn),e(s,Ds,t),e(s,P,t),P.innerHTML=ka,e(s,xs,t),e(s,F,t),a(F,os),a(os,jn),e(s,Ls,t),e(s,D,t),D.innerHTML=fa,e(s,Cs,t),e(s,J,t),a(J,ls),a(ls,Tn),e(s,Ms,t),e(s,x,t),x.innerHTML=va},p:In,i:In,o:In,d(s){s&&n(d),s&&n(cs),s&&n(m),s&&n(rs),s&&n(h),s&&n(is),s&&n(y),s&&n(us),s&&n(L),s&&n(ks),s&&n(C),s&&n(fs),s&&n(f),s&&n(vs),s&&n(g),s&&n(ds),s&&n(k),s&&n(ms),s&&n(H),s&&n(hs),s&&n(b),s&&n(ys),s&&n(O),s&&n(gs),s&&n(w),s&&n(ws),s&&n(R),s&&n(Es),s&&n(j),s&&n(_s),s&&n(A),s&&n(bs),s&&n(T),s&&n(js),s&&n(q),s&&n(Ts),s&&n(S),s&&n(Ss),s&&n(Y),s&&n(Is),s&&n(I),s&&n(Ps),s&&n(K),s&&n(Ds),s&&n(P),s&&n(xs),s&&n(F),s&&n(Ls),s&&n(D),s&&n(Cs),s&&n(J),s&&n(Ms),s&&n(x)}}}const ea={title:"Starting with SvelteKit"},{title:pa}=ea;class Ia extends ba{constructor(d){super();ja(this,d,null,Sa,Ta,{})}}var Da=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:Ia,metadata:ea});export{Ia as S,Da as _,ea as m};
